{"remainingRequest":"/Users/may3/Documents/imgMark Git/imgMARK/node_modules/babel-loader/lib/index.js!/Users/may3/Documents/imgMark Git/imgMARK/node_modules/vuetify-loader/lib/loader.js!/Users/may3/Documents/imgMark Git/imgMARK/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/may3/Documents/imgMark Git/imgMARK/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/may3/Documents/imgMark Git/imgMARK/src/components/ImageStack.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/may3/Documents/imgMark Git/imgMARK/src/components/ImageStack.vue","mtime":1549235592265},{"path":"/Users/may3/Documents/imgMark Git/imgMARK/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/may3/Documents/imgMark Git/imgMARK/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/may3/Documents/imgMark Git/imgMARK/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/may3/Documents/imgMark Git/imgMARK/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/may3/Documents/imgMark Git/imgMARK/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"ImageStack\",\n  data: function data() {\n    return {\n      message: this.imageid // We cache the dimensions of the previous\n      // render so that we can clear the area later.\n\n    };\n  },\n  props: {\n    width: String,\n    logoWidth: String,\n    imageid: String\n  },\n  mounted: function mounted() {\n    this.$nextTick(function () {\n      this.message = this.imageid; // Code that will run only after the\n      // entire view has been rendered\n    });\n  },\n  methods: {\n    getBase64Image: function getBase64Image(url) {\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = 800;\n      canvas.height = 600; // var canvas = document.getElementById('myCanvas');\n\n      var context = canvas.getContext(\"2d\");\n      var mark = new Image();\n      mark.src = url; // \"http://res.cloudinary.com/filmfest/image/upload/t_imgmark-cutter/imgmark/img02.png\";\n\n      mark.onload = function () {\n        context.drawImage(mark, 0, 0);\n        var dataURL = canvas.toDataURL(\"image/png\");\n        return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n      }; //   var canvas = document.createElement(\"canvas\");\n      //   canvas.width = img.width;\n      //   canvas.height = img.height;\n      //   var ctx = canvas.getContext(\"2d\");\n      //   context.drawImage(img, 0, 0);\n      //   var dataURL = canvas.toDataURL(\"image/png\");\n      //   return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n\n    }\n  },\n  computed: {\n    // a computed getter\n    watermarkURL: function watermarkURL() {\n      // `this` points to the vm instance\n      return \"https://res.cloudinary.com/filmfest/image/upload/t_imagemark-watermark/v1549190372/imgmark/\" + this.imageid + \".png\";\n    },\n    markURL: function markURL() {\n      // `this` points to the vm instance\n      var mark = \"https://res.cloudinary.com/filmfest/image/upload/t_imgmark-cutter/imgmark/\" + this.imageid + \".png\"; //   var base64 = getBase64Image(mark);\n\n      return mark;\n    }\n  }\n};",{"version":3,"sources":["ImageStack.vue"],"names":[],"mappings":";;;;;;;;;AASA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KAAA,OADA,CAEA;AACA;;AAHA,KAAA;AAKA,GARA;AAUA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,MADA;AAEA,IAAA,SAAA,EAAA,MAFA;AAGA,IAAA,OAAA,EAAA;AAHA,GAVA;AAeA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,SAAA,CAAA,YAAA;AACA,WAAA,OAAA,GAAA,KAAA,OAAA,CADA,CAEA;AACA;AACA,KAJA;AAKA,GArBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,EAAA,wBAAA,GAAA,EAAA;AACA,UAAA,MAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AACA,MAAA,MAAA,CAAA,KAAA,GAAA,GAAA;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,GAAA,CAHA,CAIA;;AACA,UAAA,OAAA,GAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AAEA,UAAA,IAAA,GAAA,IAAA,KAAA,EAAA;AAEA,MAAA,IAAA,CAAA,GAAA,GAAA,GAAA,CATA,CAUA;;AAEA,MAAA,IAAA,CAAA,MAAA,GAAA,YAAA;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA;AACA,YAAA,OAAA,GAAA,MAAA,CAAA,SAAA,CAAA,WAAA,CAAA;AACA,eAAA,OAAA,CAAA,OAAA,CAAA,gCAAA,EAAA,EAAA,CAAA;AACA,OAJA,CAZA,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AA1BA,GAtBA;AAkDA,EAAA,QAAA,EAAA;AACA;AAEA,IAAA,YAAA,EAAA,wBAAA;AACA;AACA,aACA,gGACA,KAAA,OADA,GAEA,MAHA;AAKA,KAVA;AAWA,IAAA,OAAA,EAAA,mBAAA;AACA;AACA,UAAA,IAAA,GACA,+EACA,KAAA,OADA,GAEA,MAHA,CAFA,CAMA;;AAEA,aAAA,IAAA;AACA;AApBA;AAlDA,CAAA","sourcesContent":["<template>\n  <div class=\"ImageStack\">\n    <h4>{{message}}</h4>\n    <img class=\"mark\" :src=\"markURL\" :width=\"logoWidth\">\n    <img class=\"watermark\" :src=\"watermarkURL\" :width=\"width\">\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ImageStack\",\n  data() {\n    return {\n      message: this.imageid\n      // We cache the dimensions of the previous\n      // render so that we can clear the area later.\n    };\n  },\n\n  props: {\n    width: String,\n    logoWidth: String,\n    imageid: String\n  },\n  mounted: function() {\n    this.$nextTick(function() {\n      this.message = this.imageid;\n      // Code that will run only after the\n      // entire view has been rendered\n    });\n  },\n  methods: {\n    getBase64Image: function(url) {\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = 800;\n      canvas.height = 600;\n      // var canvas = document.getElementById('myCanvas');\n      var context = canvas.getContext(\"2d\");\n\n      var mark = new Image();\n\n      mark.src = url;\n      // \"http://res.cloudinary.com/filmfest/image/upload/t_imgmark-cutter/imgmark/img02.png\";\n\n      mark.onload = function() {\n        context.drawImage(mark, 0, 0);\n        var dataURL = canvas.toDataURL(\"image/png\");\n        return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n      };\n\n      //   var canvas = document.createElement(\"canvas\");\n      //   canvas.width = img.width;\n      //   canvas.height = img.height;\n      //   var ctx = canvas.getContext(\"2d\");\n      //   context.drawImage(img, 0, 0);\n      //   var dataURL = canvas.toDataURL(\"image/png\");\n      //   return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n    }\n  },\n  computed: {\n    // a computed getter\n\n    watermarkURL: function() {\n      // `this` points to the vm instance\n      return (\n        \"https://res.cloudinary.com/filmfest/image/upload/t_imagemark-watermark/v1549190372/imgmark/\" +\n        this.imageid +\n        \".png\"\n      );\n    },\n    markURL: function() {\n      // `this` points to the vm instance\n      let mark =\n        \"https://res.cloudinary.com/filmfest/image/upload/t_imgmark-cutter/imgmark/\" +\n        this.imageid +\n        \".png\";\n      //   var base64 = getBase64Image(mark);\n\n      return mark;\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.ImageStack {\n  min-width: 90%;\n  min-height: 230px;\n}\n.logo {\n  position: absolute;\n  top: 40px;\n  left: 5%;\n  max-width: 90%;\n}\n\n.mark {\n  position: absolute;\n  top: 40px;\n  left: 5%;\n  max-width: 90%;\n}\n\n.watermark {\n  position: absolute;\n  top: 40px;\n  left: 5%;\n  max-width: 90%;\n}\n</style>\n"],"sourceRoot":"src/components"}]}